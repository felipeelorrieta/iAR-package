[{"path":"https://felipeelorrieta.github.io/iAR-package/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elorrieta Felipe. Author, maintainer. Ojeda Cesar. Author. Eyheramendy Susana. Author. Palma Wilfredo. Author.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Felipe E, Cesar O, Susana E, Wilfredo P (2025). iAR: Irregularly Observed Autoregressive Models. R package version 1.3.2, https://felipeelorrieta.github.io/iAR-package/.","code":"@Manual{,   title = {iAR: Irregularly Observed Autoregressive Models},   author = {Elorrieta Felipe and Ojeda Cesar and Eyheramendy Susana and Palma Wilfredo},   year = {2025},   note = {R package version 1.3.2},   url = {https://felipeelorrieta.github.io/iAR-package/}, }"},{"path":[]},{"path":"https://felipeelorrieta.github.io/iAR-package/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Irregularly Observed Autoregressive Models","text":"Data sets, functions scripts examples implement autoregressive models irregularly observed time series. models available package irregular autoregressive (iAR) model Eyheramendy et al.(2018), complex irregular autoregressive (CiAR) model Elorrieta et al.(2019) bivariate irregular autoregressive (BiAR) model Elorrieta et al.(2021).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Irregularly Observed Autoregressive Models","text":"can install released version iAR Github :","code":"remotes::install_github(\"felipeelorrieta/iAR-package\")"},{"path":"https://felipeelorrieta.github.io/iAR-package/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Irregularly Observed Autoregressive Models","text":"Please note iAR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":null,"dir":"Reference","previous_headings":"","what":"`BiAR` Class — BiAR","title":"`BiAR` Class — BiAR","text":"Represents bivariate irregular autoregressive (BiAR) time series model. class extends `multidata` class provides additional properties modeling, forecasting, interpolation bivariate time series data.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"`BiAR` Class — BiAR","text":"","code":"BiAR(   times = integer(0),   series = integer(0),   series_esd = integer(0),   series_names = character(0),   fitted_values = integer(0),   loglik = integer(0),   kalmanlik = integer(0),   coef = c(0.8, 0),   tAhead = 1,   rho = 0,   forecast = integer(0),   interpolated_values = integer(0),   interpolated_times = integer(0),   interpolated_series = integer(0),   zero_mean = TRUE,   standardized = TRUE,   hessian = FALSE,   summary = list() )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"`BiAR` Class — BiAR","text":"times numeric vector representing time points. series numeric matrix vector representing values time series. series_esd numeric matrix vector representing error standard deviations time series. series_names optional character vector representing name series. fitted_values numeric vector containing fitted values model. loglik numeric value representing log-likelihood model. kalmanlik numeric value representing Kalman likelihood model. coef numeric vector containing estimated coefficients model. tAhead numeric value specifying forecast horizon (default: 1). rho numeric vector containing estimated coefficients model. forecast numeric vector containing forecasted values. interpolated_values numeric vector containing interpolated values. interpolated_times numeric vector containing times interpolated data points. interpolated_series numeric vector containing interpolated series. zero_mean logical value indicating model assumes zero-mean process (default: TRUE). standardized logical value indicating model assumes standardized process (default: TRUE). hessian logical value indicating whether Hessian matrix computed estimation (default: FALSE). summary list containing summary model fit, including diagnostics statistical results.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"`BiAR` Class — BiAR","text":"`BiAR` class designed handle bivariate irregularly observed time series data using autoregressive approach. extends `multidata` class include additional properties modeling bivariate time series. Key features `BiAR` class include: - Support bivariate time series data. - Forecasting interpolation functionalities irregular time points. - Assumptions zero-mean standardized processes, configurable user. - Estimation model parameters likelihoods, including Kalman likelihood.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":"validation-rules","dir":"Reference","previous_headings":"","what":"Validation Rules","title":"`BiAR` Class — BiAR","text":"- `@times` must numeric vector without dimensions strictly increasing. - `@series` must numeric matrix two columns (bivariate) empty. - number rows `@series` must match length `@times`. - `@series_esd`, provided, must numeric matrix. dimensions must match `@series`, must one row number columns. - `@series_esd` contains NA values, must correspond positionally NA values `@series`. - `@series_names`, provided, must character vector length equal number columns `@series`, names must unique. - `@coef` must numeric vector length 2, element strictly -1 1. - `@tAhead` must strictly positive numeric scalar.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"`BiAR` Class — BiAR","text":"Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/BiAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"`BiAR` Class — BiAR","text":"","code":"o=iAR::utilities() o<-gentime(o, n=200, distribution = \"expmixture\", lambda1 = 130, lambda2 = 6.5,p1 = 0.15, p2 = 0.85) times=o@times my_BiAR <- BiAR(times = times,coef = c(0.9, 0.3), rho = 0.9)  # Access properties my_BiAR@coef #> [1] 0.9 0.3"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":null,"dir":"Reference","previous_headings":"","what":"`CiAR` Class — CiAR","title":"`CiAR` Class — CiAR","text":"Represents complex irregular autoregressive (CiAR) time series model. class extends `unidata` class provides additional properties modeling, forecasting, interpolating irregularly observed time series data negative positive autocorrelation.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"`CiAR` Class — CiAR","text":"","code":"CiAR(   times = integer(0),   series = integer(0),   series_esd = integer(0),   series_names = character(0),   fitted_values = integer(0),   kalmanlik = integer(0),   coef = c(0.9, 0),   tAhead = 1,   forecast = integer(0),   interpolated_values = integer(0),   interpolated_times = integer(0),   interpolated_series = integer(0),   zero_mean = TRUE,   standardized = TRUE,   hessian = FALSE,   summary = list() )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"`CiAR` Class — CiAR","text":"times numeric vector representing time points. series complex vector representing values time series. series_esd numeric vector representing error standard deviations time series. series_names optional character vector length 1 representing name series. fitted_values numeric vector containing fitted values model. kalmanlik numeric value representing Kalman likelihood model. coef numeric vector length 2, containing coefficients model. value must lie within [-1, 1]. Defaults `c(0.9, 0)`. tAhead numeric value specifying forecast horizon (default: 1). forecast numeric vector containing forecasted values. interpolated_values numeric vector containing interpolated values. interpolated_times numeric vector containing times interpolated data points. interpolated_series numeric vector containing interpolated series. zero_mean logical value indicating model assumes zero-mean process (default: TRUE). standardized logical value indicating model assumes standardized process (default: TRUE). hessian logical value indicating whether Hessian matrix computed estimation (default: FALSE). summary list containing summary model fit, including diagnostics statistical results.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"`CiAR` Class — CiAR","text":"`CiAR` class designed handle irregularly observed time series data either negative positive autocorrelation using autoregressive approach. extends `unidata` class include functionalities specific `CiAR` model. Key features `CiAR` class include: - Support irregularly observed time series data negative positive autocorrelation. - Forecasting interpolation functionalities irregular time points. - Configurable assumptions zero-mean standardized processes.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":"validation","dir":"Reference","previous_headings":"","what":"Validation","title":"`CiAR` Class — CiAR","text":"- Inherits validation rules `unidata` class:  - `@times`, `@series`, `@series_esd` must numeric vectors.  - `@times` must contain `NA` values must strictly increasing.  - length `@series` must match length `@times`.  - length `@series_esd` must 0, 1, equal length `@series`.  - `NA` values `@series` must correspond exactly (positionally) `NA` values `@series_esd`.  - `@series_names`, provided, must character vector length 1. - `@coef` must numeric vector length 2 dimensions. - value `@coef` must interval [-1, 1]. - `@tAhead` must strictly positive numeric scalar.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"`CiAR` Class — CiAR","text":"Elorrieta, F, Eyheramendy, S, Palma, W (2019). “Discrete-time autoregressive model unequally spaced time-series observations.” &, 627, A120. doi:10.1051/0004-6361/201935560 .","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/CiAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"`CiAR` Class — CiAR","text":"","code":"o=iAR::utilities() o<-gentime(o, n=200, distribution = \"expmixture\", lambda1 = 130, lambda2 = 6.5,p1 = 0.15, p2 = 0.85) times=o@times my_CiAR <- CiAR(times = times,coef = c(0.9, 0))  # Access properties my_CiAR@coef #> [1] 0.9 0.0"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/Planets.html","id":null,"dir":"Reference","previous_headings":"","what":"Transit of an extrasolar planet — Planets","title":"Transit of an extrasolar planet — Planets","text":"Time series corresponding residuals parametric model fitted Jordan et al (2013) transit extrasolar planet.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/Planets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transit of an extrasolar planet — Planets","text":"","code":"Planets"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/Planets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Transit of an extrasolar planet — Planets","text":"data frame 91 observations following 2 variables: t Time mid-transit (hours). r Residuals parametric model fitted Jordan et al (2013).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/Planets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transit of an extrasolar planet — Planets","text":"Jordán , Espinoza N, Rabus M, Eyheramendy S, Sing D~K, Désert J, Bakos G~Á, Fortney J~J, López-Morales M, Maxted P~F~L, Triaud ~H~M~J, Szentgyorgyi (2013). “Ground-based Optical Transmission Spectrum WASP-6b.” Astrophysical Journal, 778, 184. doi:10.1088/0004-637X/778/2/184 , 1310.6048.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/Planets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transit of an extrasolar planet — Planets","text":"","code":"data(Planets) #plot(Planets[,1],Planets[,2],xlab='Time from mid-transit (hours)',ylab='Noise',pch=20)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/agn.html","id":null,"dir":"Reference","previous_headings":"","what":"Active Galactic Nuclei — agn","title":"Active Galactic Nuclei — agn","text":"Time series AGN MCG-6-30-15 measured K-band 2006 August 2011 July ANDICAM camera mounted 1.3 m telescope Cerro Tololo Inter-American Observatory (CTIO)","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/agn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Active Galactic Nuclei — agn","text":"","code":"agn"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/agn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Active Galactic Nuclei — agn","text":"data frame 237 observations following 3 variables: t heliocentric Julian Day - 2450000 m Flux $(10^(-15) ergs/s/cm^2 /)$ merr measurement error standard deviations.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/agn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Active Galactic Nuclei — agn","text":"Lira P, Arévalo P, Uttley P, McHardy IMM, Videla L (2015). “Long-term monitoring archetype Seyfert galaxy MCG-6-30-15: X-ray, optical near-IR variability corona, disc torus.” Monthly Notices Royal Astronomical Society, 454(1), 368-379. ISSN 0035-8711, doi:10.1093/mnras/stv1945 .","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/agn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Active Galactic Nuclei — agn","text":"","code":"data(agn) plot(agn$t,agn$m,type=\"l\",ylab=\"\",xlab=\"\")"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/clcep.html","id":null,"dir":"Reference","previous_headings":"","what":"Classical Cepheid — clcep","title":"Classical Cepheid — clcep","text":"Time series classical cepheid variable star obtained HIPPARCOS.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/clcep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classical Cepheid — clcep","text":"","code":"clcep"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/clcep.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Classical Cepheid — clcep","text":"data frame 109 observations following 3 variables: t heliocentric Julian Day m magnitude merr measurement error magnitude (mag).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/clcep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classical Cepheid — clcep","text":"frequency computed GLS light curve 0.060033386. Catalogs designations star: HD 1989: HD 305996 TYCHO-2 2000:TYC 8958-2333-1 USNO-A2.0:USNO-A2 0225-10347916 HIP: HIP-54101","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/clcep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classical Cepheid — clcep","text":"","code":"data(clcep) f1=0.060033386 o1=iAR::utilities() o1<-phase(o1,data=clcep,f1=f1,twop=TRUE) plot(o1@times_phased,o1@series_phased,pch=20)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovag.html","id":null,"dir":"Reference","previous_headings":"","what":"ZTF g-band Cataclysmic Variable/Nova — cvnovag","title":"ZTF g-band Cataclysmic Variable/Nova — cvnovag","text":"Time series cataclysmic variable/nova object observed g-band ZTF survey processed ALeRCE broker.ZTF Object code: ZTF18aayzpbr","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ZTF g-band Cataclysmic Variable/Nova — cvnovag","text":"","code":"cvnovag"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ZTF g-band Cataclysmic Variable/Nova — cvnovag","text":"data frame 67 observations following 3 variables: t heliocentric Julian Day - 2400000 m magnitude merr measurement error standard deviations.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovag.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ZTF g-band Cataclysmic Variable/Nova — cvnovag","text":"Förster F, Cabrera-Vives G, Castillo-Navarrete E, Estévez PA, Sánchez-Sáez P, Arredondo J, Bauer FE, Carrasco-Davis R, Catelan M, Elorrieta F, Eyheramendy S, Huijse P, Pignata G, Reyes E, Reyes , Rodríguez-Mancini D, Ruz-Mieres D, Valenzuela C, Álvarez-Maldonado , Astorga N, Borissova J, Clocchiatti , Cicco DD, Donoso-Oliva C, Hernández-García L, Graham MJ, Jordán , Kurtev R, Mahabal , Maureira JC, Muñoz-Arancibia , Molina-Ferreiro R, Moya , Palma W, Pérez-Carrasco M, Protopapas P, Romero M, Sabatini-Gacitua L, Sánchez , Martín JS, Sepúlveda-Cobo C, Vera E, Vergara JR (2021). “Automatic Learning Rapid Classification Events (ALeRCE) Alert Broker.” Astronomical Journal, 161(5), 242. doi:10.3847/1538-3881/abe9bc .","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ZTF g-band Cataclysmic Variable/Nova — cvnovag","text":"","code":"data(cvnovag) plot(cvnovag$t,cvnovag$m,type=\"l\",ylab=\"\",xlab=\"\",col=\"green\")"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovar.html","id":null,"dir":"Reference","previous_headings":"","what":"ZTF r-band Cataclysmic Variable/Nova — cvnovar","title":"ZTF r-band Cataclysmic Variable/Nova — cvnovar","text":"Time series cataclysmic variable/nova object observed r-band ZTF survey processed ALeRCE broker.ZTF Object code: ZTF18aayzpbr","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ZTF r-band Cataclysmic Variable/Nova — cvnovar","text":"","code":"cvnovar"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ZTF r-band Cataclysmic Variable/Nova — cvnovar","text":"data frame 65 observations following 3 variables: t heliocentric Julian Day - 2400000 m magnitude merr measurement error standard deviations.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ZTF r-band Cataclysmic Variable/Nova — cvnovar","text":"Förster F, Cabrera-Vives G, Castillo-Navarrete E, Estévez PA, Sánchez-Sáez P, Arredondo J, Bauer FE, Carrasco-Davis R, Catelan M, Elorrieta F, Eyheramendy S, Huijse P, Pignata G, Reyes E, Reyes , Rodríguez-Mancini D, Ruz-Mieres D, Valenzuela C, Álvarez-Maldonado , Astorga N, Borissova J, Clocchiatti , Cicco DD, Donoso-Oliva C, Hernández-García L, Graham MJ, Jordán , Kurtev R, Mahabal , Maureira JC, Muñoz-Arancibia , Molina-Ferreiro R, Moya , Palma W, Pérez-Carrasco M, Protopapas P, Romero M, Sabatini-Gacitua L, Sánchez , Martín JS, Sepúlveda-Cobo C, Vera E, Vergara JR (2021). “Automatic Learning Rapid Classification Events (ALeRCE) Alert Broker.” Astronomical Journal, 161(5), 242. doi:10.3847/1538-3881/abe9bc .","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/cvnovar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ZTF r-band Cataclysmic Variable/Nova — cvnovar","text":"","code":"data(cvnovar) plot(cvnovar$t,cvnovar$m,type=\"l\",ylab=\"\",xlab=\"\",col=\"red\")"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dmcep.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Mode Cepheid. — dmcep","title":"Double Mode Cepheid. — dmcep","text":"Time series double mode cepheid variable star obtained OGLE.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dmcep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Mode Cepheid. — dmcep","text":"","code":"dmcep"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dmcep.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Double Mode Cepheid. — dmcep","text":"data frame 191 observations following 3 variables: t heliocentric Julian Day m magnitude merr measurement error magnitude (mag).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dmcep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Double Mode Cepheid. — dmcep","text":"dominant frequency computed GLS light curve 0.7410152. second frequency computed GLS light curve 0.5433353. OGLE-ID:175210","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dmcep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double Mode Cepheid. — dmcep","text":"","code":"data(dmcep) f1=0.7410152 o1=iAR::utilities() o1<-phase(o1,data=dmcep,f1=f1,twop=TRUE) plot(o1@times_phased,o1@series_phased,pch=20)  #fit=harmonicfit(dmcep,f1) #f2=0.5433353 #foldlc(cbind(dmcep$t,fit$res,dmcep$merr),f2)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dscut.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta Scuti — dscut","title":"Delta Scuti — dscut","text":"Time series Delta Scuti variable star obtained HIPPARCOS.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dscut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta Scuti — dscut","text":"","code":"dscut"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dscut.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Delta Scuti — dscut","text":"data frame 116 observations following 3 variables: t heliocentric Julian Day m magnitude merr measurement error magnitude (mag).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dscut.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delta Scuti — dscut","text":"frequency computed GLS light curve 14.88558646. Catalogs designations star: HD 1989: HD 199757 TYCHO-2 2000: TYC 7973-401-1 USNO-A2.0: USNO-A2 0450-39390397 HIP: HIP 103684","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/dscut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delta Scuti — dscut","text":"","code":"data(dscut) f1=14.88558646 o1=iAR::utilities() o1<-phase(o1,data=dscut,f1=f1,twop=TRUE) plot(o1@times_phased,o1@series_phased,pch=20)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/eb.html","id":null,"dir":"Reference","previous_headings":"","what":"Eclipsing Binaries (Beta Lyrae) — eb","title":"Eclipsing Binaries (Beta Lyrae) — eb","text":"Time series Beta Lyrae variable star obtained OGLE.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/eb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eclipsing Binaries (Beta Lyrae) — eb","text":"","code":"eb"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/eb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eclipsing Binaries (Beta Lyrae) — eb","text":"data frame 470 observations following 3 variables: t heliocentric Julian Day m magnitude merr measurement error magnitude (mag).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/eb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Eclipsing Binaries (Beta Lyrae) — eb","text":"frequency computed GLS light curve 1.510571586. Catalogs designations star:OGLE051951.22-694002.7","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/eb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eclipsing Binaries (Beta Lyrae) — eb","text":"","code":"data(eb) f1=1.510571586 o1=iAR::utilities() o1<-phase(o1,data=eb,f1=f1,twop=TRUE) plot(o1@times_phased,o1@series_phased,pch=20)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"Fitted Values provided data. method implemented : 1. Irregular Autoregressive models (`iAR`) 2. Complex Irregular Autoregressive models (`CiAR`) 3. Bivariate Autoregressive models (`BiAR`)","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"","code":"fit(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"x object class iAR, CiAR, BiAR, containing model specification parameters: iAR: family: distribution family iAR model (one \"norm\", \"t\", \"gamma\"). series: numeric vector representing time series fitted. coef: coefficient(s) iAR model. times: numeric vector specifying time points series. zero_mean: Logical, whether fit zero-mean model. standardized: Logical, whether model output standardized (\"norm\" family). mean: mean parameter (\"gamma\" family). CiAR: coef: real imaginary parts CiAR model's coefficients. series: numeric vector representing time series fitted. times: numeric vector specifying time points series. zero_mean: Logical, whether fit zero-mean model. standardized: Logical, whether model output standardized. c: scaling parameter CiAR model. BiAR: coef: coefficients BiAR model (real imaginary parts). series: numeric matrix two columns representing bivariate time series fitted. times: numeric vector specifying time points series. series_esd: numeric matrix error structure (optional, used internally). zero_mean: Logical, whether fit zero-mean model. ... Additional arguments (unused).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"updated object class iAR, CiAR, BiAR, fitted_values property contains fitted time series values.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"method fits specified time series model data contained object. Depending class input object: iAR, function supports three distribution families: \"norm\" normal distribution. \"t\" t-distribution. \"gamma\" gamma distribution. CiAR, function uses complex autoregressive processes. BiAR, function fits bivariate autoregressive process. required parameters (e.g., coefficients, time points) must set calling method.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf. ,Elorrieta, F, Eyheramendy, S, Palma, W (2019). “Discrete-time autoregressive model unequally spaced time-series observations.” &, 627, A120. doi:10.1051/0004-6361/201935560 . ,Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitted Values for iAR, CiAR, and BiAR Classes — fit","text":"","code":"# Example 1: Fitting a normal iAR model library(iAR) n=100 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_norm <- iAR(family = \"norm\", times = times, coef = 0.9)   model_norm <- sim(model_norm) model_norm <- kalman(model_norm)  model_norm <- fit(model_norm) plot(model_norm@times, model_norm@series, type = \"l\", main = \"Original Series\") lines(model_norm@times, model_norm@fitted_values, col = \"red\", lwd = 2)  plot_fit(model_norm)   # Example 2: Fitting a CiAR model set.seed(6714) model_CiAR <- CiAR(times = times,coef = c(0.9, 0)) model_CiAR <- sim(model_CiAR) y=model_CiAR@series y1=y/sd(y) model_CiAR@series=y1 model_CiAR@series_esd=rep(0,n) model_CiAR <- kalman(model_CiAR) print(model_CiAR@coef) #> [1] 0.9199923 0.1072453 model_CiAR <- fit(model_CiAR) yhat=model_CiAR@fitted_values  # Example 3: Fitting a BiAR model n=80 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_BiAR <- BiAR(times = times,coef = c(0.9, 0.3), rho = 0.9) model_BiAR <- sim(model_BiAR) y=model_BiAR@series y1=y/apply(y,2,sd) model_BiAR@series=y1 model_BiAR@series_esd=matrix(0,n,2) model_BiAR <- kalman(model_BiAR) print(model_BiAR@coef)  #> [1] 0.9061971 0.3054558 model_BiAR <- fit(model_BiAR) print(model_BiAR@rho) #> [1] 0.8114818 yhat=model_BiAR@fitted_values"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast for iAR, CiAR, and BiAR Classes — forecast","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"Generates forecasts specified time series model. method implemented : 1. Irregular Autoregressive models (`iAR`) 2. Complex Irregular Autoregressive models (`CiAR`) 3. Bivariate Autoregressive models (`BiAR`)","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"","code":"forecast(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"x object class iAR, CiAR, BiAR, containing model specification parameters: iAR: family: distribution family iAR model (one \"norm\", \"t\", \"gamma\"). series: numeric vector representing time series forecast. coef: coefficient(s) iAR model. zero_mean: Logical, whether model assumes zero-mean series. standardized: Logical, whether model uses standardized data (\"norm\" family). mean: mean parameter (\"gamma\" family). tAhead: Integer, number steps ahead forecast. CiAR: coef: real imaginary parts CiAR model's coefficients. series: numeric vector representing time series forecast. times: numeric vector specifying time points series. zero_mean: Logical, whether model assumes zero-mean series. standardized: Logical, whether model output standardized. tAhead: Integer, number steps ahead forecast. BiAR: coef: coefficients BiAR model (real imaginary parts). series: numeric matrix two columns representing bivariate time series forecast. times: numeric vector specifying time points series. tAhead: Integer, number steps ahead forecast. ... Additional arguments (unused).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"updated object class iAR, CiAR, BiAR, forecast property contains forecasted values.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"method generates forecasts specified time series model. Depending class input object: iAR, function supports three distribution families: \"norm\" normal distribution. \"t\" t-distribution. \"gamma\" gamma distribution. CiAR, function uses complex autoregressive processes. BiAR, function generates forecasts bivariate autoregressive process. required parameters (e.g., coefficients, time points) must set calling method.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf. ,Elorrieta, F, Eyheramendy, S, Palma, W (2019). “Discrete-time autoregressive model unequally spaced time-series observations.” &, 627, A120. doi:10.1051/0004-6361/201935560 . ,Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast for iAR, CiAR, and BiAR Classes — forecast","text":"","code":"# Example 1: Forecasting with a normal iAR model library(iAR) n=100 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_norm <- iAR(family = \"norm\", times = times, coef = 0.9)   model_norm <- sim(model_norm) model_norm <- kalman(model_norm)  model_norm@tAhead=1.3 model_norm <- forecast(model_norm) plot(times, model_norm@series, type = \"l\", main = \"Original Series with Forecast\") points(max(times)+ model_norm@tAhead, model_norm@forecast, col = \"blue\", pch = 16)  plot_forecast(model_norm)   # Example 2: Forecasting with a CiAR model set.seed(6714) model_CiAR <- CiAR(times = times,coef = c(0.9, 0)) model_CiAR <- sim(model_CiAR) y=model_CiAR@series y1=y/sd(y) model_CiAR@series=y1 model_CiAR@series_esd=rep(0,n) model_CiAR <- kalman(model_CiAR) print(model_CiAR@coef) #> [1] 0.9199923 0.1072453 model_CiAR@tAhead=1.3 model_CiAR <-forecast(model_CiAR) model_CiAR@forecast #> [1] 0.2925816  # Example 3: Forecasting with a BiAR model n=80 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_BiAR <- BiAR(times = times,coef = c(0.9, 0.3), rho = 0.9) model_BiAR <- sim(model_BiAR) y=model_BiAR@series y1=y/apply(y,2,sd) model_BiAR@series=y1 model_BiAR@series_esd=matrix(0,n,2) model_BiAR <- kalman(model_BiAR) print(model_BiAR@coef) #> [1] 0.9061971 0.3054558 model_BiAR@tAhead=1.3 model_BiAR <-forecast(model_BiAR) model_BiAR@forecast #>            [,1]     [,2] #> [1,] -0.2210477 2.414699"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/gentime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating Irregularly spaced times — gentime","title":"Generating Irregularly spaced times — gentime","text":"method generating time points based statistical distribution. results stored `times` slot `utilities` object.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/gentime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating Irregularly spaced times — gentime","text":"","code":"gentime(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/gentime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating Irregularly spaced times — gentime","text":"x object class `utilities`. ... Additional arguments generating time points: n positive integer. Length observation times. distribution character string specifying distribution observation times. Default `\"expmixture\"`. Available options : - `\"expmixture\"`: mixture two exponential distributions. - `\"uniform\"`: uniform distribution. - `\"exponential\"`: single exponential distribution. - `\"gamma\"`: gamma distribution. lambda1 Mean (1/rate) exponential distribution first exponential distribution mixture exponential distributions. Default `130`. lambda2 Mean (1/rate) second exponential distribution mixture exponential distributions. Default `6.5`. p1 Weight first exponential distribution mixture exponential distributions. Default `0.15`. p2 Weight second exponential distribution mixture exponential distributions. Default `0.85`. Shape parameter gamma distribution lower limit uniform distribution. Default `0`. b Scale parameter gamma distribution upper limit uniform distribution. Default `1`.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/gentime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating Irregularly spaced times — gentime","text":"updated `utilities` object generated observation times stored `times` slot.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/gentime.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generating Irregularly spaced times — gentime","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/gentime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating Irregularly spaced times — gentime","text":"","code":"set.seed(12917) o1=iAR::utilities() o1<-gentime(o1, n=200, distribution = \"expmixture\", lambda1 = 130,  lambda2 = 6.5,p1 = 0.15, p2 = 0.85) st=o1@times mean(diff(st)) #> [1] 28.4244  o1=iAR::utilities() o1<-gentime(o1, n=200, distribution = \"expmixture\", lambda1 = 15,  lambda2 = 2.5,p1 = 0.15, p2 = 0.85) st=o1@times mean(diff(st)) #> [1] 4.592272"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonic Fit to Time Series — harmonicfit","title":"Harmonic Fit to Time Series — harmonicfit","text":"function fit k-harmonic function time series data.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonic Fit to Time Series — harmonicfit","text":"","code":"harmonicfit(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonic Fit to Time Series — harmonicfit","text":"x object class `utilities`. ... Additional arguments pairing time series: data data frame three columns corresponding time, values, standard errors irregularly observed time series. f1 frequency (1 / period) time series. nham Number harmonic components model. weighted logical; true, weighted least squares (WLS) estimation performed using weights based standard deviations errors. Default 'FALSE'. remove_trend logical; true, linear trend time series removed harmonic model fitted.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonic Fit to Time Series — harmonicfit","text":"object class `utilities` slots: fitted_values Fitted values harmonic model. residuals Residuals harmonic model. coef Estimated coefficients harmonic model. summary summary object containing detailed model information.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Harmonic Fit to Time Series — harmonicfit","text":"function fits harmonic regression model 'nham' components input time series, optionally removing linear trend allowing weighted estimation standard errors available.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Harmonic Fit to Time Series — harmonicfit","text":"Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/harmonicfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonic Fit to Time Series — harmonicfit","text":"","code":"data(clcep) f1=0.060033386 o1=iAR::utilities() o1<-phase(o1,data=clcep,f1=f1) #results$R2 #results$MSE #results=harmonicfit(file=clcep[,1:2],f1=f1,nham=3) #results$R2 #results$MSE #results=harmonicfit(file=clcep[,1:2],f1=f1,weights=clcep[,3]) #results$R2 #results$MSE"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"iAR: Irregularly Observed Autoregressive Models — iAR-package","title":"iAR: Irregularly Observed Autoregressive Models — iAR-package","text":"Description: Data sets, functions scripts examples implement autoregressive models irregularly observed time series. models available package irregular autoregressive model (Eyheramendy et al.(2018) <doi:10.1093/mnras/sty2487>), complex irregular autoregressive model (Elorrieta et al.(2019) <doi:10.1051/0004-6361/201935560>) bivariate irregular autoregressive model (Elorrieta et al.(2021) <doi:10.1093/mnras/stab1216>)","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"iAR: Irregularly Observed Autoregressive Models — iAR-package","text":"\"_PACKAGE\"","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":null,"dir":"Reference","previous_headings":"","what":"`iAR` Class — iAR","title":"`iAR` Class — iAR","text":"Represents univariate irregular autoregressive (iAR) time series model. class extends \"unidata\" class includes additional properties modeling, forecasting, interpolation.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"`iAR` Class — iAR","text":"","code":"iAR(   times = integer(0),   series = integer(0),   series_esd = integer(0),   series_names = character(0),   family = \"norm\",   fitted_values = integer(0),   loglik = integer(0),   kalmanlik = integer(0),   coef = 0.9,   df = 3,   sigma = 1,   mean = 0,   variance = 1,   tAhead = 1,   forecast = integer(0),   interpolated_values = integer(0),   interpolated_times = integer(0),   interpolated_series = integer(0),   zero_mean = TRUE,   standardized = TRUE,   hessian = FALSE,   summary = list() )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"`iAR` Class — iAR","text":"times numeric vector representing time points. series numeric vector representing values time series. series_esd numeric vector representing error standard deviations time series. series_names optional character vector length 1 representing name series. family character string indicating distribution family model. Must one `\"norm\"`, `\"t\"`, `\"gamma\"`. Defaults `\"norm\"`. fitted_values numeric vector containing fitted values model. loglik numeric value representing log-likelihood model. kalmanlik numeric value representing Kalman likelihood model. coef numeric vector containing estimated coefficients model (default: 0.9). df numeric value representing degrees freedom (`t` distribution) (default: 3). sigma numeric value representing scale parameter (`t` distribution) (default: 1). mean numeric value representing estimated mean model (`gamma` parameter). variance numeric value representing estimated variance model (`gamma` parameter). tAhead numeric value specifying forecast horizon (default: 1). forecast numeric vector containing forecasted values. interpolated_values numeric vector containing interpolated values. interpolated_times numeric vector containing times interpolated data points. interpolated_series numeric vector containing interpolated series. zero_mean logical value indicating model assumes zero-mean process (default: TRUE). standardized logical value indicating model assumes standardized process (default: TRUE). hessian logical value indicating whether Hessian matrix computed estimation (default: FALSE). summary list containing summary model fit, including diagnostics statistical results.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"`iAR` Class — iAR","text":"`iAR` class designed handle irregularly observed time series data using autoregressive approach. extends \"unidata\" class include additional modeling diagnostic capabilities. Key functionalities include forecasting, interpolation, model fitting. class also supports advanced modeling features, : - Different distribution families data (e.g., Gaussian, `t`-distribution). - Optional computation Hessian matrix parameter estimation. - Standardized zero-mean process assumptions.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":"validation-rules","dir":"Reference","previous_headings":"","what":"Validation Rules","title":"`iAR` Class — iAR","text":"- Inherits validation rules `unidata` class:  - `@times`, `@series`, `@series_esd` must numeric vectors.  - `@times` must contain `NA` values must strictly increasing.  - length `@series` must match length `@times`.  - length `@series_esd` must 0, 1, equal length `@series`.  - `NA` values `@series` must correspond exactly (positionally) `NA` values `@series_esd`.  - `@series_names`, provided, must character vector length 1. - `@family` must one `\"norm\"`, `\"t\"`, `\"gamma\"`. - `@coef` must numeric scalar strictly 0 1. - `@df` must positive integer scalar **** `family = \"t\"`; otherwise, specified. - `@sigma` must strictly positive numeric scalar (used `\"t\"` family). - `@mean` `@variance` must strictly positive numeric scalars **** `family = \"gamma\"`. - `@tAhead` must strictly positive numeric scalar.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"`iAR` Class — iAR","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/iAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"`iAR` Class — iAR","text":"","code":"# Create an `iAR` object o=iAR::utilities() o<-gentime(o, n=200, distribution = \"expmixture\", lambda1 = 130, lambda2 = 6.5,p1 = 0.15, p2 = 0.85) times=o@times my_iAR <- iAR(family = \"norm\", times = times, coef = 0.9,hessian=TRUE)  my_iAR@family #> [1] \"norm\" my_iAR@coef #> [1] 0.9"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"method performs imputation missing values time series using autoregressive model. imputation done iteratively missing value, utilizing available data model coefficients. Depending model family, interpolation performed differently: - norm: standard autoregressive model normally distributed data. - t: model time series t-distributed errors. - gamma: model time series gamma-distributed errors. - CiAR: complex irregular autoregressive model. - BiAR: bivariate autoregressive model.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"","code":"interpolation(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"x object class iAR, CiAR, BiAR, containing model specification parameters: iAR: family: distribution family iAR model (one \"norm\", \"t\", \"gamma\"). series: numeric vector representing time series interpolate. coef: coefficients iAR model. zero_mean: Logical, whether model assumes zero-mean series. standardized: Logical, whether model uses standardized data (\"norm\" family). mean: mean parameter (\"gamma\" family). CiAR: coef: coefficients CiAR model. series_esd: series error standard deviations CiAR model. zero_mean: Logical, whether model assumes zero-mean series. standardized: Logical, whether model uses standardized data. seed: Optional seed random number generation. BiAR: coef: coefficients BiAR model. series_esd: series error standard deviations BiAR model. zero_mean: Logical, whether model assumes zero-mean series. yini1: Initial value first time series (BiAR models). yini2: Initial value second time series (BiAR models). seed: Optional seed random number generation. ... Additional arguments (unused).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"object class x interpolated time series.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"Performs interpolation time series missing values. method implemented : 1. Irregular Autoregressive models (iAR) 2. Complex Irregular Autoregressive models (CiAR) 3. Bivariate Autoregressive models (BiAR) method handles missing values (NA) time series imputing iteratively. missing value, available data used fit autoregressive model, missing value imputed based model's output. CiAR BiAR models, error standard deviations initial values also considered imputation.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf. ,Elorrieta, F, Eyheramendy, S, Palma, W (2019). “Discrete-time autoregressive model unequally spaced time-series observations.” &, 627, A120. doi:10.1051/0004-6361/201935560 . ,Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":[]},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/interpolation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolation for iAR, CiAR, and BiAR Classes — interpolation","text":"","code":"# Interpolation for iAR model library(iAR) n=100 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_norm <- iAR(family = \"norm\", times = times, coef = 0.9)   model_norm <- sim(model_norm) y=model_norm@series y1=y/sd(y) model_norm@series=y1 model_norm@series_esd=rep(0,n) model_norm <- kalman(model_norm)  print(model_norm@coef) #> [1] 0.8850837 napos=10 model_norm@series[napos]=NA model_norm <- interpolation(model_norm) interpolation=na.omit(model_norm@interpolated_values) mse=as.numeric(y1[napos]-interpolation)^2 print(mse) #> [1] 2.019834 plot(times,y,type='l',xlim=c(times[napos-5],times[napos+5])) points(times,y,pch=20) points(times[napos],interpolation*sd(y),col=\"red\",pch=20)   # Interpolation for CiAR model model_CiAR <- CiAR(times = times,coef = c(0.9, 0)) model_CiAR <- sim(model_CiAR) y=model_CiAR@series y1=y/sd(y) model_CiAR@series=y1 model_CiAR@series_esd=rep(0,n) model_CiAR <- kalman(model_CiAR) print(model_CiAR@coef) #> [1] 9.182499e-01 4.973288e-09 napos=10 model_CiAR@series[napos]=NA model_CiAR <- interpolation(model_CiAR) interpolation=na.omit(model_CiAR@interpolated_values) mse=as.numeric(y1[napos]-interpolation)^2 print(mse) #> [1] 2.333803 plot(times,y,type='l',xlim=c(times[napos-5],times[napos+5])) points(times,y,pch=20) points(times[napos],interpolation*sd(y),col=\"red\",pch=20)  # Interpolation for BiAR model model_BiAR <- BiAR(times = times,coef = c(0.9, 0.3), rho = 0.9) model_BiAR <- sim(model_BiAR) y=model_BiAR@series y1=y/apply(y,2,sd) model_BiAR@series=y1 model_BiAR@series_esd=matrix(0,n,2) model_BiAR <- kalman(model_BiAR) print(model_BiAR@coef)  #> [1] 0.8901906 0.3060788 napos=10 model_BiAR@series[napos,1]=NA model_BiAR@series_esd[napos,1]=NA model_BiAR <- interpolation(model_BiAR) interpolation=na.omit(model_BiAR@interpolated_values[,1]) mse=as.numeric(y1[napos,1]-interpolation)^2 print(mse) #> [1] 0.2631268 par(mfrow=c(2,1)) plot(times,y[,1],type='l',xlim=c(times[napos-5],times[napos+5])) points(times,y[,1],pch=20) points(times[napos],interpolation*apply(y,1,sd)[1],col=\"red\",pch=20) plot(times,y[,2],type='l',xlim=c(times[napos-5],times[napos+5])) points(times,y[,2],pch=20)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"Performs Maximum Likelihood Estimation (MLE) parameters iAR, CiAR, BiAR models maximizing likelihood function using Kalman filter. method applies Kalman filter compute likelihood estimate model parameters maximize likelihood model type.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"","code":"kalman(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"x object class iAR, CiAR, BiAR containing model specification parameters: iAR models, object contain: series: numeric vector time series data. times: numeric vector specifying time points series. series_esd: numeric vector specifying error structure. zero_mean: logical value indicating series zero-centered. standardized: logical value indicating series standardized. CiAR models, object contain: series: numeric vector time series data. times: numeric vector specifying time points series. series_esd: numeric vector specifying error structure. zero_mean: logical value indicating series zero-centered. standardized: logical value indicating series standardized. c: numeric value specifying scale parameter CiAR model. niter: integer specifying number iterations Kalman filter. seed: integer seed random number generation (optional). BiAR models, object contain: series: numeric matrix containing two columns bivariate time series data. times: numeric vector specifying time points series. series_esd: numeric matrix specifying error structure series. zero_mean: logical value indicating series zero-centered. niter: integer specifying number iterations Kalman filter. seed: integer seed random number generation (optional). ... Additional arguments (unused).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"updated object class iAR, CiAR, BiAR, coef property updated estimated model parameters (using MLE) kalmanlik property contains log-likelihood value model.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"function applies Kalman filter perform Maximum Likelihood Estimation (MLE) parameters autoregressive models (iAR, CiAR, BiAR). Kalman filter used maximize likelihood function based given time series data, parameters maximize likelihood estimated. - iAR, Kalman filter applied estimate model parameters maximizing likelihood. - CiAR, Kalman filter applied estimate parameters complex autoregressive model maximizing likelihood. - BiAR, Kalman filter applied estimate parameters bivariate autoregressive model maximizing likelihood. method returns updated model object, including estimated parameters log-likelihood value.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf. ,Elorrieta, F, Eyheramendy, S, Palma, W (2019). “Discrete-time autoregressive model unequally spaced time-series observations.” &, 627, A120. doi:10.1051/0004-6361/201935560 . ,Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/kalman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Likelihood Estimation of Parameters for iAR, CiAR, and BiAR Models using the Kalman Filter — kalman","text":"","code":"# Example 1: Applying Kalman filter for MLE of iAR model parameters library(iAR) n=100 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_norm <- iAR(family = \"norm\", times = times, coef = 0.9,hessian=TRUE) model_norm <- sim(model_norm) model_norm <- kalman(model_norm)   print(model_norm@coef)  # Access the estimated coefficients #> [1] 0.9088109 print(model_norm@kalmanlik)  # Access the Kalman likelihood value #> [1] 0.2431375  # Example 2: Applying Kalman filter for MLE of CiAR model parameters set.seed(6714) model_CiAR <- CiAR(times = times,coef = c(0.9, 0)) model_CiAR <- sim(model_CiAR) y=model_CiAR@series y1=y/sd(y) model_CiAR@series=y1 model_CiAR@series_esd=rep(0,n) model_CiAR <- kalman(model_CiAR) print(model_CiAR@coef) #> [1]  0.9199923 -0.1072453 print(model_CiAR@kalmanlik)   #> [1] 0.2272269  # Example 3: Applying Kalman filter for MLE of BiAR model parameters set.seed(6714) model_BiAR <- BiAR(times = times,coef = c(0.9, 0.3), rho = 0.9) model_BiAR <- sim(model_BiAR) y=model_BiAR@series y1=y/apply(y,2,sd) model_BiAR@series=y1 model_BiAR@series_esd=matrix(0,n,2) model_BiAR <- kalman(model_BiAR) print(model_BiAR@coef)  #> [1] 0.8997529 0.3154864 print(model_BiAR@kalmanlik)   #> [1] -27.07637"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Likelihood Estimation for iAR Models — loglik","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"Maximum Likelihood Estimation irregular autoregressive (iAR) models, supporting different distribution families: normal (`iAR`), t (`iAR-T`), gamma (`iAR-Gamma`).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"","code":"loglik(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"x object class iAR, containing model specification, parameters, time series evaluated: series: observed time series. times: numeric vector specifying time points series. series_esd: (Optional) standardized version series. zero_mean: Logical. Indicates whether series mean-centered. standardized: Logical. Indicates whether series standardized. hessian: Logical. TRUE, function computes Hessian matrix parameter estimation. family: distribution family iAR model (one \"norm\", \"t\", \"gamma\"). df: Degrees freedom t-distribution (family = \"t\"). sigma: scale parameter t-distribution (family = \"t\"). mean: mean parameter gamma distribution (family = \"gamma\"). variance: variance parameter gamma distribution (family = \"gamma\"). ... Additional arguments (unused).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"updated iAR object following additional attributes: coef: Estimated model coefficients. loglik: Log-likelihood value model. summary: summary table containing parameter estimates, standard errors, p-values. sigma: t gamma families, estimated scale parameter. mean: gamma family, estimated mean parameter. variance: gamma family, estimated variance parameter.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"method estimates parameters iAR model using Maximum Likelihood Estimation (MLE) approach. Depending chosen distribution family, corresponding likelihood function maximized: \"norm\" maximizes likelihood normally-distributed series. \"t\" maximizes likelihood t-distributed series. \"gamma\" maximizes likelihood gamma-distributed series. function updates iAR object estimated parameters, log-likelihood value, summary table includes standard errors p-values.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Likelihood Estimation for iAR Models — loglik","text":"","code":"# Example: Estimating parameters for a normal iAR model library(iAR) times <- 1:100 model <- iAR(family = \"norm\", times = times, coef = 0.9, hessian = TRUE) model <- sim(model)  # Simulate the series model <- loglik(model)  # Estimate parameters using MLE print(model@coef)  # Access the estimated coefficients #> [1] 0.8945457 print(model@loglik)  # Access the computed log-likelihood #> [1] 62.31915"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/multidata.html","id":null,"dir":"Reference","previous_headings":"","what":"Multidata Class — multidata","title":"Multidata Class — multidata","text":"`multidata` class S7 class designed represent multidimensional time series models, including main time series additional series (e.g., error standard deviations related variables).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/multidata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multidata Class — multidata","text":"","code":"multidata(   times = integer(0),   series = integer(0),   series_esd = integer(0),   series_names = character(0) )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/multidata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multidata Class — multidata","text":"times numeric vector representing time points time series. series numeric vector matrix representing main time series. series_esd numeric vector matrix representing additional series, error standard deviations related data. series_names optional character vector representing name series.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/multidata.html","id":"validation-rules","dir":"Reference","previous_headings":"","what":"Validation Rules","title":"Multidata Class — multidata","text":"- `@times` must numeric vector strictly increasing. - `@series` must numeric matrix empty. number rows must match length `@times`. - `@series_esd` must numeric matrix empty. provided empty, dimensions must match `@series`. - `@series_names` provided, must character vector length number columns `@series`, contain unique values.","code":""},{"path":[]},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/multidata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multidata Class — multidata","text":"","code":"# Create a multidata object multidata_instance <- multidata(   times = c(1, 2, 3, 4),   series = matrix(c(10, 20, 15, 25,                     12, 18, 17, 23),                    nrow = 4, ncol = 2),   series_esd = matrix(c(1, 1.5, 1.2, 1.8,                         0.9, 1.3, 1.1, 1.7),                       nrow = 4, ncol = 2) )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairing two irregularly observed time series — pairingits","title":"Pairing two irregularly observed time series — pairingits","text":"method pairs observational times two irregularly observed time series.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairing two irregularly observed time series — pairingits","text":"","code":"pairingits(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairing two irregularly observed time series — pairingits","text":"x object class `utilities`. ... Additional arguments pairing time series: data1 data frame three columns corresponding first irregularly observed time series. data2 data frame three columns corresponding second irregularly observed time series. tol numeric value indicating tolerance parameter.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairing two irregularly observed time series — pairingits","text":"object class `utilities` slots: series matrix containing paired time series, unmatched measurements filled `NA`. series_esd matrix containing paired error standard deviations time series, unmatched measurements filled `NA`. times numeric vector paired observational times.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pairing two irregularly observed time series — pairingits","text":"method checks observational times input time series pairs measurements fall within specified tolerance (`tol`). measurement one series paired, filled `NA` values corresponding columns series.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pairing two irregularly observed time series — pairingits","text":"Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/pairingits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairing two irregularly observed time series — pairingits","text":"","code":"data(cvnovag) data(cvnovar) datag=cvnovag datar=cvnovar o1=iAR::utilities() o1<-pairingits(o1, datag,datar,tol=0.1) pargr1=na.omit(o1@paired) st=apply(pargr1[,c(1,4)],1,mean) model_BiAR <- BiAR(times = st,series=pargr1[,c(2,5)],series_esd=pargr1[,c(3,6)]) model_BiAR <- kalman(model_BiAR)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing phased time series — phase","title":"Computing phased time series — phase","text":"function computes time series folded period.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing phased time series — phase","text":"","code":"phase(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing phased time series — phase","text":"x object class `utilities`. ... Additional arguments pairing time series: data data frame three columns corresponding time, values, standard errors irregularly observed time series. f1 frequency (1 / period) time series. twop logical; TRUE, phased series duplicated two cycles (0–2).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing phased time series — phase","text":"object class `utilities` slots: series_phased numeric vector containing time series values ordered phase. series_esd_phased numeric vector containing error standard deviations time series ordered phase. times_phased numeric vector phased times (values 0 1, 0 2 'two.cycles = TRUE').","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computing phased time series — phase","text":"phase \\(\\phi\\) observation computed $$\\phi = \\frac{t - t_0}{p} - \\mathrm{E}(t),$$ \\(t_0\\) reference time (default first observation), \\(p = 1/f_1\\) period, \\(\\mathrm{E}(t)\\) integer part \\((t - t_0)/p\\).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Computing phased time series — phase","text":"Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/phase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing phased time series — phase","text":"","code":"data(clcep) f1=0.060033386 o1=iAR::utilities() o1<-phase(o1,data=clcep,f1=f1,twop=TRUE) plot(o1@times_phased,o1@series_phased,pch=20)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Method for unidata Objects — plot","title":"Plot Method for unidata Objects — plot","text":"method allows visualizing `unidata` `multidata` objects using `plot.zoo` function `zoo` package. converts `unidata` (`multidata`) object `zoo` object applies plotting function time series contained object.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Method for unidata Objects — plot","text":"x object class `unidata` `multidata`. object must contain time series `series` slot associated time points `times` slot. ... Additional arguments passed `plot.zoo` function customizing plot (e.g., titles, colors, etc.).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Fit Method for unidata Objects — plot_fit","title":"Plot Fit Method for unidata Objects — plot_fit","text":"method visualizes `unidata` `multidata` objects plotting original time series fitted values. `unidata` (`multidata`) object converted `zoo` object plotting, fitted values added secondary line different style color.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Fit Method for unidata Objects — plot_fit","text":"","code":"plot_fit(x,...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Fit Method for unidata Objects — plot_fit","text":"x object class `unidata` `multidata`. object must contain time series `series` slot, associated time points `times` slot, fitted values `fitted_values` slot. ... Additional arguments passed `plot.zoo` function customizing plot (e.g., titles, colors, etc.).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Forecast Method for unidata Objects — plot_forecast","title":"Plot Forecast Method for unidata Objects — plot_forecast","text":"method visualizes `unidata` `multidata` objects plotting original time series forecasted values. `unidata` (`multidata`) object converted `zoo` object plotting, forecasted values added points different color.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Forecast Method for unidata Objects — plot_forecast","text":"","code":"plot_forecast(x,...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/plot_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Forecast Method for unidata Objects — plot_forecast","text":"x object class `unidata` `multidata`. object must contain time series `series` slot, associated time points `times` slot, forecasted values `forecast` slot, forecast horizon `tAhead` slot. ... Additional arguments passed `plot.zoo` function customizing plot (e.g., titles, colors, etc.).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Time Series for Multiple iAR Models — sim","title":"Simulate Time Series for Multiple iAR Models — sim","text":"Simulates time series irregular autoregressive (iAR) models, including: 1. Normal iAR model (`iAR`) 2. T-distribution iAR model (`iAR-T`) 3. Gamma-distribution iAR model (`iAR-Gamma`)","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Time Series for Multiple iAR Models — sim","text":"","code":"sim(x, ...)"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Time Series for Multiple iAR Models — sim","text":"x object class iAR, CiAR, BiAR, containing model specification parameters: iAR (irregular AR models), model family \"norm\", \"t\", \"gamma\", : family: distribution family iAR model (one \"norm\", \"t\", \"gamma\"). coef: coefficient(s) iAR model. times: numeric vector specifying time points series. df: Degrees freedom t-distribution (family = \"t\"). sigma: scale parameter t-distribution (family = \"t\"). mean: mean parameter gamma distribution (family = \"gamma\"). variance: variance parameter gamma distribution (family = \"gamma\"). CiAR (complex irregular autoregressive models): coef: real imaginary parts CiAR model's coefficients. times: numeric vector specifying time points series. rho: correlation parameter CiAR model. c: scale parameter CiAR model. BiAR (BiAR models): coef: coefficients BiAR model (real imaginary). times: numeric vector specifying time points series. rho: correlation parameter BiAR model. series_esd: series error structure (optional, used internally). ... Additional arguments generating irregular times. used time points provided times argument: n positive integer. Length observation times. Default 100. used time points provided times. distribution character string specifying distribution observation times. Default `\"expmixture\"`. Available options : expmixture mixture two exponential distributions. uniform uniform distribution. exponential single exponential distribution. gamma gamma distribution.  lambda1 Mean (1/rate) exponential distribution first exponential distribution mixture exponential distributions. Default `130`. lambda2 Mean (1/rate) second exponential distribution mixture exponential distributions. Default `6.5`. p1 Weight first exponential distribution mixture exponential distributions. Default `0.15`. p2 Weight second exponential distribution mixture exponential distributions. Default `0.85`. Shape parameter gamma distribution lower limit uniform distribution. Default `0`. b Scale parameter gamma distribution upper limit uniform distribution. Default `1`.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Time Series for Multiple iAR Models — sim","text":"updated object class iAR, CiAR, BiAR, series property contains simulated time series.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Time Series for Multiple iAR Models — sim","text":"function simulates time series based specified model parameters. Depending class input object: iAR models, supports three distribution families: \"norm\" normal distribution. \"t\" t-distribution. \"gamma\" gamma distribution. CiAR models, uses complex autoregressive processes generate time series. BiAR models, simulates BiAR process using specified coefficients correlation. coefficients family-specific parameters must set calling function.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate Time Series for Multiple iAR Models — sim","text":"Eyheramendy S, Elorrieta F, Palma W (2018). “irregular discrete time series model identify residuals autocorrelation astronomical light curves.” Monthly Notices Royal Astronomical Society, 481(4), 4311-4322. ISSN 0035-8711, doi:10.1093/mnras/sty2487 , https://academic.oup.com/mnras/article-pdf/481/4/4311/25906473/sty2487.pdf. ,Elorrieta, F, Eyheramendy, S, Palma, W (2019). “Discrete-time autoregressive model unequally spaced time-series observations.” &, 627, A120. doi:10.1051/0004-6361/201935560 . ,Elorrieta F, Eyheramendy S, Palma W, Ojeda C (2021). “novel bivariate autoregressive model predicting forecasting irregularly observed time series.” Monthly Notices Royal Astronomical Society, 505(1), 1105-1116. ISSN 0035-8711, doi:10.1093/mnras/stab1216 , https://academic.oup.com/mnras/article-pdf/505/1/1105/38391762/stab1216.pdf.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Time Series for Multiple iAR Models — sim","text":"","code":"# Example 1: Simulating a normal iAR model library(iAR) n=100 set.seed(6714) o=iAR::utilities() o<-gentime(o, n=n) times=o@times model_norm <- iAR(family = \"norm\", times = times, coef = 0.9,hessian=TRUE) model_norm <- sim(model_norm) plot(model_norm, type = \"l\", main = \"Simulated iAR-Norm Series\")   # Example 2: Simulating a CiAR model set.seed(6714) model_CiAR <- CiAR(times = times,coef = c(0.9, 0)) model_CiAR <- sim(model_CiAR) plot(model_CiAR , type = \"l\", main = \"Simulated CiAR Series\")   # Example 3: Simulating a BiAR model set.seed(6714) model_BiAR <- BiAR(times = times,coef = c(0.9, 0.3), rho = 0.9) model_BiAR <- sim(model_BiAR) plot(times, model_BiAR@series[,1], type = \"l\", main = \"Simulated BiAR Series\")"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for unidata Objects — summary","title":"Summary Method for unidata Objects — summary","text":"method provides summary `unidata` object, represents iAR (irregular autoregressive) model. summary includes information model family (e.g., \"normal\", \"t\", \"gamma\"), coefficients, standard errors, t-values, p-values. output formatted display relevant statistics based model family.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for unidata Objects — summary","text":"object object class `unidata`. object contains fitted iAR model, including parameters coefficients (`coef`), standard errors (`stderr`), t-values (`tvalue`), p-values (`pvalue`), family type (`family`), model-specific parameters. ... Additional arguments (unused).","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/unidata.html","id":null,"dir":"Reference","previous_headings":"","what":"Unidata Class — unidata","title":"Unidata Class — unidata","text":"`unidata` class S7 class designed represent univariate irregularly observed time series models associated times, values, optional error standard deviations.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/unidata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unidata Class — unidata","text":"","code":"unidata(   times = integer(0),   series = integer(0),   series_esd = integer(0),   series_names = character(0) )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/unidata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unidata Class — unidata","text":"times numeric vector representing time points. series numeric vector representing values time series. series_esd numeric vector representing error standard deviations time series. series_names optional character vector length 1 representing name series.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/unidata.html","id":"validation-rules","dir":"Reference","previous_headings":"","what":"Validation Rules","title":"Unidata Class — unidata","text":"- `@times`, `@series`, `@series_esd` must numeric vectors. - `@times` must contain `NA` values must strictly increasing. - length `@series` must match length `@times`. - length `@series_esd` must 0, 1, equal length `@series`. - `NA` values `@series` must correspond exactly (positionally) `NA` values `@series_esd`. - `@series_names`, provided, must character vector length 1.","code":""},{"path":[]},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/unidata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unidata Class — unidata","text":"","code":"# Create a unidata object unidata_instance <- unidata(   times = c(1, 2, 3, 4),   series = c(10, 20, 15, 25),   series_esd = c(1, 1.5, 1.2, 1.8),   series_names = \"my_series\")"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities Class — utilities","title":"Utilities Class — utilities","text":"`utilities` class S7 class designed group utility functions directly tied specific objects package. include functions `gentime`, `paringits`, `harmonicfit`, `foldlc`.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities Class — utilities","text":"","code":"utilities(   times = integer(0),   series = integer(0),   series_esd = integer(0),   times_phased = integer(0),   series_phased = integer(0),   series_esd_phased = integer(0),   fitted_values = integer(0),   residuals = integer(0),   coef = integer(0),   summary = list(),   paired = integer(0) )"},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities Class — utilities","text":"times numeric vector storing time points. series numeric vector representing values time series. series_esd numeric vector representing error standard deviations time series. times_phased numeric vector phased times. series_phased numeric vector containing time series values ordered phase. series_esd_phased numeric vector containing error standard deviations time series ordered phase. fitted_values numeric vector containing fitted values harmonic model. residuals numeric vector containing residuals harmonic model. coef numeric vector containing estimated coefficients harmonic model. summary summary object containing harmonic model information. paired Data Frame paired datasets.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/utilities.html","id":"description","dir":"Reference","previous_headings":"","what":"Description","title":"Utilities Class — utilities","text":"class acts container standalone methods perform independent operations within package. grouping single class, package achieves better modularity organization, facilitating maintenance extensibility.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/utilities.html","id":"available-methods","dir":"Reference","previous_headings":"","what":"Available Methods","title":"Utilities Class — utilities","text":"- `gentime`: Generates time points based specified statistical distribution. - `paringits`: method pairing irregular time series. - `harmonicfit`: method fitting harmonic models data. - `foldlc`: method folding light curves time series analysis.","code":""},{"path":"https://felipeelorrieta.github.io/iAR-package/reference/utilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilities Class — utilities","text":"","code":"# Create a utilities object"}]
